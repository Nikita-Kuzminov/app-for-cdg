{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\app-for-cdg\\\\src\\\\js\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport '../css/style.css'; // Начальный код из туториала с кретиками-ноликами\n\nclass Square extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, this.props.value);\n  }\n\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    });\n  }\n\n  render() {\n    const status = 'Next player: X';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, status), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2), this.renderSquare(3)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, this.renderSquare(4), this.renderSquare(5), this.renderSquare(6), this.renderSquare(7)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, this.renderSquare(8), this.renderSquare(9), this.renderSquare(10), this.renderSquare(11)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, this.renderSquare(12), this.renderSquare(13), this.renderSquare(14), this.renderSquare(15)));\n  }\n\n}\n\nexport default class Game extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    })));\n  }\n\n} // ===========================\n// Единственный класс, который я смог написать на React, чтобы он работал\n\nconst c = React.createElement;\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flipped: false\n    };\n  }\n\n  render() {\n    if (this.state.liked) {\n      flipCard();\n    }\n\n    return c(\"button\", {\n      onClick: () => this.setState({\n        flipped: true\n      })\n    }, \"Like\");\n  }\n\n} // Все работающие функции до добавления реакта\n\n\nconst cards = document.querySelectorAll(\".memory__game-card\");\nlet hasFlippedCard = false;\nlet lockBoard = false;\nlet firstCard, secondCard;\n\nfunction flipCard() {\n  if (lockBoard) return;\n  if (this === firstCard) return;\n  this.classList.add(\"flip\");\n\n  if (!hasFlippedCard) {\n    hasFlippedCard = true;\n    firstCard = this;\n    return;\n  }\n\n  secondCard = this;\n  checkForMatch();\n}\n\nfunction checkForMatch() {\n  let isMatch = firstCard.dataset.framework === secondCard.dataset.framework;\n  isMatch ? disableCards() : unflipCards();\n}\n\nfunction disableCards() {\n  firstCard.removeEventListener(\"click\", flipCard);\n  secondCard.removeEventListener(\"click\", flipCard);\n  resetBoard();\n}\n\nfunction unflipCards() {\n  lockBoard = true;\n  setTimeout(() => {\n    firstCard.classList.remove(\"flip\");\n    secondCard.classList.remove(\"flip\");\n    resetBoard();\n  }, 1500);\n}\n\nfunction resetBoard() {\n  [hasFlippedCard, lockBoard] = [false, false];\n  [firstCard, secondCard] = [null, null];\n}\n\n(function shuffle() {\n  cards.forEach(card => {\n    let randomPos = Math.floor(Math.random() * 12);\n    card.style.order = randomPos;\n  });\n})();\n\ncards.forEach(card => card.addEventListener(\"click\", flipCard));","map":{"version":3,"sources":["C:/dev/app-for-cdg/src/js/index.js"],"names":["React","ReactDOM","Square","Component","render","props","value","Board","renderSquare","i","status","Game","c","createElement","Card","constructor","state","flipped","liked","flipCard","onClick","setState","cards","document","querySelectorAll","hasFlippedCard","lockBoard","firstCard","secondCard","classList","add","checkForMatch","isMatch","dataset","framework","disableCards","unflipCards","removeEventListener","resetBoard","setTimeout","remove","shuffle","forEach","card","randomPos","Math","floor","random","style","order","addEventListener"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport '../css/style.css';\r\n\r\n// Начальный код из туториала с кретиками-ноликами\r\n\r\nclass Square extends React.Component {\r\n    render() {\r\n        return (\r\n            <button className=\"square\">\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return <Square value={i} />;\r\n    }\r\n\r\n    render() {\r\n        const status = 'Next player: X';\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"status\">{status}</div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                    {this.renderSquare(3)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(8)}\r\n                    {this.renderSquare(9)}\r\n                    {this.renderSquare(10)}\r\n                    {this.renderSquare(11)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(12)}\r\n                    {this.renderSquare(13)}\r\n                    {this.renderSquare(14)}\r\n                    {this.renderSquare(15)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default class Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/* status */}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// ===========================\r\n\r\n// Единственный класс, который я смог написать на React, чтобы он работал\r\n\r\nconst c = React.createElement;\r\n\r\nclass Card extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {flipped: false};\r\n    }\r\n\r\n    render() {\r\n        if (this.state.liked) {\r\n            flipCard();\r\n        }\r\n\r\n        return c(\r\n            \"button\",\r\n            {onClick: () => this.setState({flipped: true})},\r\n            \"Like\"\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// Все работающие функции до добавления реакта\r\n\r\nconst cards = document.querySelectorAll(\".memory__game-card\");\r\n\r\nlet hasFlippedCard = false;\r\nlet lockBoard = false;\r\nlet firstCard, secondCard;\r\n\r\nfunction flipCard() {\r\n    if (lockBoard) return;\r\n    if (this === firstCard) return;\r\n\r\n    this.classList.add(\"flip\");\r\n\r\n    if (!hasFlippedCard) {\r\n        hasFlippedCard = true;\r\n        firstCard = this;\r\n        return;\r\n    }\r\n\r\n    secondCard = this;\r\n\r\n    checkForMatch();\r\n}\r\n\r\nfunction checkForMatch() {\r\n    let isMatch = firstCard.dataset.framework === secondCard.dataset.framework;\r\n    isMatch ? disableCards() : unflipCards();\r\n}\r\n\r\nfunction disableCards() {\r\n    firstCard.removeEventListener(\"click\", flipCard);\r\n    secondCard.removeEventListener(\"click\", flipCard);\r\n\r\n    resetBoard();\r\n}\r\n\r\nfunction unflipCards() {\r\n    lockBoard = true;\r\n\r\n    setTimeout(() => {\r\n        firstCard.classList.remove(\"flip\");\r\n        secondCard.classList.remove(\"flip\");\r\n\r\n        resetBoard();\r\n    }, 1500);\r\n}\r\n\r\nfunction resetBoard() {\r\n    [hasFlippedCard, lockBoard] = [false, false];\r\n    [firstCard, secondCard] = [null, null];\r\n}\r\n\r\n(function shuffle() {\r\n    cards.forEach(card => {\r\n        let randomPos = Math.floor(Math.random() * 12);\r\n        card.style.order = randomPos;\r\n    });\r\n})();\r\n\r\ncards.forEach(card => card.addEventListener(\"click\", flipCard));\r\n"]},"metadata":{},"sourceType":"module"}