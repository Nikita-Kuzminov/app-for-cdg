{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\app-for-cdg\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.flipCard = () => {\n      if (this.props.numberOfFlippedCards < 2) {\n        if (this.props.numberOfFlippedCards === 0) {\n          this.props.setFirstFlippedCard(this.props.imgName);\n        } else {\n          this.props.setSecondFlippedCard(this.props.imgName);\n        }\n\n        const currentState = this.state.cardIsFlipped;\n        this.setState({\n          cardIsFlipped: !currentState\n        });\n        this.props.setNumberOfFlippedCards();\n      }\n    };\n\n    this.state = {\n      cardIsFlipped: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      onClick: this.flipCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"img/back/js-badge.svg\",\n      alt: \"js\",\n      className: this.state.cardIsFlipped ? 'img-hidden' : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.imgSrc,\n      alt: this.props.imgName,\n      className: this.state.cardIsFlipped ? null : 'img-hidden',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setNumberOfFlippedCards = () => {\n      const numberOfFlippedCards = this.state.numberOfFlippedCards;\n      this.setState({\n        numberOfFlippedCards: numberOfFlippedCards + 1\n      });\n      console.log(this.state.numberOfFlippedCards);\n    };\n\n    this.setFirstFlippedCard = alt => {\n      this.setState({\n        firstFlippedCard: alt\n      });\n    };\n\n    this.setSecondFlippedCard = alt => {\n      this.setState({\n        secondFlippedCard: alt\n      });\n    };\n\n    this.state = {\n      numberOfFlippedCards: 0,\n      firstFlippedCard: '',\n      secondFlippedCard: ''\n    };\n  } // checkCardEquals() {\n  //     return isEqual = this.state.firstFlippedCard === this.state.secondFlippedCard;\n  // }\n\n\n  render() {\n    const cards = [];\n    const equalCardsNumber = 1;\n\n    const imageContext = require.context('../public/img/front', false, /\\.(png|jpe?g|svg)$/);\n\n    const images = this.importAllImages(imageContext);\n\n    for (const [imgName, imgSrc] of Object.entries(images)) {\n      for (let i = 0; i <= equalCardsNumber; i++) {\n        cards.push( /*#__PURE__*/React.createElement(Card, {\n          cardImage: this.imageCard,\n          imgSrc: imgSrc,\n          imgName: imgName,\n          checkcardEquals: this.checkCardEquals,\n          setNumberOfFlippedCards: this.setNumberOfFlippedCards,\n          setFirstFlippedCard: this.setFirstFlippedCard,\n          setSecondFlippedCard: this.setSecondFlippedCard,\n          numberOfFlippedCards: this.state.numberOfFlippedCards,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }\n        }));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, cards);\n  }\n\n  imageCard(imgSrc, imgAlt) {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: imgSrc,\n      alt: imgAlt,\n      className: \"img-back img-hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 16\n      }\n    });\n  }\n\n  importAllImages(context) {\n    let images = {};\n    context.keys().map((item, index) => {\n      images[item.replace('./', '')] = context(item);\n    });\n    return images;\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Board, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/dev/app-for-cdg/src/App.js"],"names":["React","Card","Component","constructor","props","flipCard","numberOfFlippedCards","setFirstFlippedCard","imgName","setSecondFlippedCard","currentState","state","cardIsFlipped","setState","setNumberOfFlippedCards","render","imgSrc","Board","console","log","alt","firstFlippedCard","secondFlippedCard","cards","equalCardsNumber","imageContext","require","context","images","importAllImages","Object","entries","i","push","imageCard","checkCardEquals","imgAlt","keys","map","item","index","replace","App"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nclass Card extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cardIsFlipped: false,\r\n        };\r\n    }\r\n\r\n    flipCard = () => {\r\n        if (this.props.numberOfFlippedCards < 2) {\r\n\r\n            if (this.props.numberOfFlippedCards === 0) {\r\n                this.props.setFirstFlippedCard(this.props.imgName);\r\n            } else {\r\n                this.props.setSecondFlippedCard(this.props.imgName);\r\n            }\r\n\r\n            const currentState = this.state.cardIsFlipped;\r\n            this.setState({ cardIsFlipped: !currentState });\r\n            this.props.setNumberOfFlippedCards();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\" onClick={this.flipCard}>\r\n                <img src=\"img/back/js-badge.svg\"\r\n                     alt=\"js\"\r\n                     className={this.state.cardIsFlipped ? 'img-hidden': null}/>\r\n\r\n                <img src={this.props.imgSrc}\r\n                     alt={this.props.imgName}\r\n                     className={this.state.cardIsFlipped ? null : 'img-hidden'}/>\r\n\r\n                {/*{this.props.cardImage(this.props.imgSrc, this.props.imgName)}*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass Board extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            numberOfFlippedCards: 0,\r\n            firstFlippedCard: '',\r\n            secondFlippedCard: '',\r\n        };\r\n    }\r\n\r\n    // checkCardEquals() {\r\n    //     return isEqual = this.state.firstFlippedCard === this.state.secondFlippedCard;\r\n    // }\r\n\r\n    setNumberOfFlippedCards = () => {\r\n        const numberOfFlippedCards = this.state.numberOfFlippedCards;\r\n        this.setState({ numberOfFlippedCards: numberOfFlippedCards + 1 });\r\n        console.log(this.state.numberOfFlippedCards);\r\n    }\r\n\r\n    setFirstFlippedCard = (alt) => {\r\n        this.setState({ firstFlippedCard: alt });\r\n    }\r\n\r\n    setSecondFlippedCard = (alt) => {\r\n        this.setState({ secondFlippedCard: alt });\r\n    }\r\n\r\n    render() {\r\n        const cards = [];\r\n        const equalCardsNumber = 1;\r\n        const imageContext = require.context('../public/img/front', false, /\\.(png|jpe?g|svg)$/);\r\n        const images = this.importAllImages(imageContext);\r\n\r\n        for (const [imgName, imgSrc] of Object.entries(images)) {\r\n            for (let i = 0; i <= equalCardsNumber; i++) {\r\n                cards.push(\r\n                    <Card cardImage={this.imageCard}\r\n                          imgSrc={imgSrc}\r\n                          imgName={imgName}\r\n                          checkcardEquals={this.checkCardEquals}\r\n                          setNumberOfFlippedCards={this.setNumberOfFlippedCards}\r\n                          setFirstFlippedCard={this.setFirstFlippedCard}\r\n                          setSecondFlippedCard={this.setSecondFlippedCard}\r\n                          numberOfFlippedCards={this.state.numberOfFlippedCards}\r\n                    />\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"board\">\r\n                {cards}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    imageCard(imgSrc, imgAlt) {\r\n        return <img src={imgSrc} alt={imgAlt} className=\"img-back img-hidden\"/>\r\n    }\r\n\r\n    importAllImages(context) {\r\n        let images = {};\r\n        context.keys().map((item, index) => { images[item.replace('./', '')] = context(item); });\r\n        return images;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Board/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}